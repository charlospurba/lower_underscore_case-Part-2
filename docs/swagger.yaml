basePath: /
definitions:
  dto.CreateUserDTO:
    properties:
      age:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - username
    type: object
  dto.LoginRequestDTO:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.UpdateUserDTO:
    properties:
      age:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.UserDTO:
    properties:
      age:
        type: integer
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      age:
        type: integer
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API untuk mengelola pengguna dengan Gin Framework.
  title: Gin User App API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: Login Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login to the system
      tags:
      - auth
  /auth/logout:
    post:
      description: Logout and invalidate the current session
      responses:
        "200":
          description: Success
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout from the system
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/dto.UserDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the provided details
      parameters:
      - description: User Request
        in: body
        name: userRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve user details by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Update Request
        in: body
        name: userRequest
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: User updated
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing user
      tags:
      - users
swagger: "2.0"
